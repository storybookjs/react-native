/* do not change this file, it is auto generated by storybook. */

// note this is just to fix console logs not working sometimes, we'll remove this later
if (__DEV__) {
  const primitiveTypes = ['string', 'number', 'boolean'];
  const logLevels = ['log', 'debug', 'info', 'warn', 'error'];

  const transformArgs = (args) => {
    return args.map((arg) => {
      if (arg === undefined) {
        return 'undefined';
      }
      if (arg instanceof Error) {
        if (arg.stack) {
          return arg.stack;
        }
        return arg.toString();
      }
      if (arg instanceof Date) {
        return arg.toString();
      }
      if (primitiveTypes.includes(typeof arg)) {
        return arg.toString();
      } else {
        return JSON.stringify(arg);
      }
    });
  };
  //
  const consoleProxy = new Proxy(console, {
    get: (target, prop) => {
      //@ts-ignore
      if (logLevels.includes(prop)) {
        return (...args) => {
          // we proxy the call to itself, but we transform the arguments to strings before
          // so that they are printed in the terminal
          return target[prop].apply(this, transformArgs(args));
        };
      }
      return target[prop];
    },
  });

  console = consoleProxy;
}

global.STORIES = [
  {
    titlePrefix: '',
    directory: './components',
    files: '**/*.stories.?(ts|tsx|js|jsx)',
    importPathMatcher:
      '^\\.[\\\\/](?:components(?:\\/(?!\\.)(?:(?:(?!(?:^|\\/)\\.).)*?)\\/|\\/|$)(?!\\.)(?=.)[^/]*?\\.stories\\.(?:ts|tsx|js|jsx)?)$',
  },
  {
    titlePrefix: '',
    directory: './other_components/AnotherButton',
    files: 'AnotherButton.stories.tsx',
    importPathMatcher:
      '^\\.[\\\\/](?:other_components\\/AnotherButton\\/AnotherButton\\.stories\\.tsx)$',
  },
];

import '@storybook/addon-ondevice-notes/register';
import '@storybook/addon-ondevice-controls/register';
import '@storybook/addon-ondevice-knobs/register';
import '@storybook/addon-ondevice-backgrounds/register';
import '@storybook/addon-ondevice-actions/register';

import { initialiseV7Store } from '@storybook/react-native/dist/preview/StartV7';
// -- leave above

const stories = [
  {
    root: './components',
    // @ts-ignore
    req: require.context(
      '../components',
      true,
      // /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?(Actions|NotesExample|ControlExamples\/.*|BackgroundCsf)\.stories\.(?:ts|tsx|js|jsx)?)$/
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  },
  {
    root: './components',
    // @ts-ignore
    req: require.context(
      '../components',
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?Array\.stories\.(?:ts|tsx|js|jsx)?)$/
    ),
  },
];

const view = initialiseV7Store(stories, [
  require('@storybook/addon-actions/dist/preview'),
  require('./preview'),
]);

// if (import.meta.webpackHot) {
//   import.meta.webpackHot.accept('./{{storiesFilename}}', () => {
//     // importFn has changed so we need to patch the new one in
//     preview.onStoriesChanged({ importFn });
//   });

//   import.meta.webpackHot.accept([{{#each previewAnnotations}}'{{this}}',{{/each}}], () => {
//     // getProjectAnnotations has changed so we need to patch the new one in
//     preview.onGetProjectAnnotationsChanged({ getProjectAnnotations });
//   });
// }

export { view };
