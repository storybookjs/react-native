// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader writeRequires when there are different file extensions writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = [{"titlePrefix":"","directory":"./scripts/mocks/file-extensions","files":"FakeStory.stories.tsx","importPathMatcher":"^\\\\.[\\\\\\\\/](?:scripts\\\\/mocks\\\\/file-extensions\\\\/FakeStory\\\\.stories\\\\.tsx)$"}]

      import "@storybook/addon-ondevice-notes/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";

      import { argsEnhancers } from "@storybook/addon-actions/dist/modern/preset/addArgs"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return {"./scripts/mocks/file-extensions/FakeStory.stories.tsx": require("./FakeStory.stories.tsx")};
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is a configuration object writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = [{"titlePrefix":"ComponentsPrefix","files":"**/*.stories.tsx","directory":"./scripts/mocks/configuration-objects/components","importPathMatcher":"^\\\\.[\\\\\\\\/](?:scripts\\\\/mocks\\\\/configuration-objects\\\\/components(?:\\\\/(?!\\\\.)(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/|\\\\/|$)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.tsx)$"}]

      import "@storybook/addon-ondevice-notes/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";

      import { argsEnhancers } from "@storybook/addon-actions/dist/modern/preset/addArgs"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return {"./scripts/mocks/configuration-objects/components/FakeStory.stories.tsx": require("./components/FakeStory.stories.tsx")};
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is a story glob and exclude paths globs writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = [{"titlePrefix":"","directory":"./scripts/mocks/exclude-config-files","files":"**/*.stories.tsx","importPathMatcher":"^\\\\.[\\\\\\\\/](?:scripts\\\\/mocks\\\\/exclude-config-files(?:\\\\/(?!\\\\.)(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/|\\\\/|$)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.tsx)$"}]

      import "@storybook/addon-ondevice-notes/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";

      import { argsEnhancers } from "@storybook/addon-actions/dist/modern/preset/addArgs"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return {"./scripts/mocks/exclude-config-files/include-components/FakeStory.stories.tsx": require("./include-components/FakeStory.stories.tsx")};
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is a story glob writes the story imports 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = [{"titlePrefix":"","directory":"./scripts/mocks/all-config-files","files":"FakeStory.stories.tsx","importPathMatcher":"^\\\\.[\\\\\\\\/](?:scripts\\\\/mocks\\\\/all-config-files\\\\/FakeStory\\\\.stories\\\\.tsx)$"}]

      import "@storybook/addon-ondevice-notes/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";

      import { argsEnhancers } from "@storybook/addon-actions/dist/modern/preset/addArgs"

      
  import { decorators, parameters } from './preview';

  if (decorators) {
    if(__DEV__){
      // stops the warning from showing on every HMR 
      require('react-native').LogBox.ignoreLogs([
        '\`clearDecorators\` is deprecated and will be removed in Storybook 7.0',
      ]);
    }
    // workaround for global decorators getting infinitely applied on HMR, see https://github.com/storybookjs/react-native/issues/185
    clearDecorators();
    decorators.forEach((decorator) => addDecorator(decorator));
  }

  if (parameters) {
    addParameters(parameters);
  }


      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return {"./scripts/mocks/all-config-files/FakeStory.stories.tsx": require("./FakeStory.stories.tsx")};
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is no preview does not add preview related stuff 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = [{"titlePrefix":"","directory":"./scripts/mocks/no-preview","files":"FakeStory.stories.tsx","importPathMatcher":"^\\\\.[\\\\\\\\/](?:scripts\\\\/mocks\\\\/no-preview\\\\/FakeStory\\\\.stories\\\\.tsx)$"}]

      import "@storybook/addon-ondevice-notes/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-actions/register";

      import { argsEnhancers } from "@storybook/addon-actions/dist/modern/preset/addArgs"

      

      
      try {
        argsEnhancers.forEach(enhancer => addArgsEnhancer(enhancer));
      } catch{}
    

      const getStories=() => {
        return {"./scripts/mocks/no-preview/FakeStory.stories.tsx": require("./FakeStory.stories.tsx")};
      }

      configure(getStories, module, false)
  "
`;

exports[`loader writeRequires when there is no story glob or addons writes no story imports or addons 1`] = `
"
      /* do not change this file, it is auto generated by storybook. */

      import { configure, addDecorator, addParameters, addArgsEnhancer, clearDecorators } from '@storybook/react-native';

      global.STORIES = []

      

      

      

      

      const getStories=() => {
        return {};
      }

      configure(getStories, module, false)
  "
`;
